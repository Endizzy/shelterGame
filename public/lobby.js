// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä—É
const socket = io();

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è WebSocket
socket.on("connect", () => {
    console.log("‚úÖ WebSocket –ø–æ–¥–∫–ª—é—á—ë–Ω. ID —Å–æ–∫–µ—Ç–∞:", socket.id);
});

socket.on("disconnect", () => {
    console.warn("‚ö†Ô∏è WebSocket –æ—Ç–∫–ª—é—á—ë–Ω.");
});

const maxPlayerCount = 8;

// –°—Å—ã–ª–∫–∏ –Ω–∞ DOM —ç–ª–µ–º–µ–Ω—Ç—ã
const playersContainer = document.getElementById("players-container");
const showLobbyId = document.getElementById("session-id-display");
let showPlayersCount = document.getElementById("playersCount");

// –î–∞–Ω–Ω—ã–µ —Å–µ—Å—Å–∏–∏
let playerName = localStorage.getItem("username");
let currentSessionId = localStorage.getItem("sessionId");
let isAdmin = localStorage.getItem("isAdmin") === "true"; // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ Boolean
const savedLobbyName = localStorage.getItem("lobbyName");
let adminId = null;
let currentPlayers = [];

document.addEventListener('DOMContentLoaded', async () => {
    const token = localStorage.getItem('authToken');
    const userTextDiv = document.getElementById('text__user');
    const userNameLink = document.getElementById('user__name');
    const loginLink = document.getElementById('openLogin');
    const logoutLink = document.getElementById('text__logout');
    const showLobbyName = document.getElementById('lobbyName');

    if (!token || !localStorage.getItem('sessionId') || !localStorage.getItem('username')) {
        alert("–û—à–∏–±–∫–∞: –ù–µ–æ–±—Ö–æ–¥–∏–º–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∏ –∞–∫—Ç–∏–≤–Ω–∞—è —Å–µ—Å—Å–∏—è.");
        window.location.href = "/"; // –ü–µ—Ä–µ–Ω–æ—Å –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
        return;
    }

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    try {
        const response = await fetch('/auth/verify', {
            method: 'GET',
            headers: {
                'Authorization': `Bearer ${token}`,
                'Content-Type': 'application/json'
            }
        });

        if (response.ok) {
            const data = await response.json();
            userNameLink.textContent = `${data.username}`;
            console.log(localStorage);
            loginLink.style.display = 'none';
            logoutLink.style.display = 'block';
            userTextDiv.style.display = 'block';
            showLobbyName.textContent = `${savedLobbyName}`;
            console.log(savedLobbyName);
        } else {
            console.error('–û—à–∏–±–∫–∞ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ —Ç–æ–∫–µ–Ω–∞');
            localStorage.clear();
            window.location.href = "index.html";
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ —Ç–æ–∫–µ–Ω–∞:', error);
        localStorage.clear();
        window.location.href = "index.html";
    }

    // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ ID —Å–µ—Å—Å–∏–∏
    const currentSessionId = localStorage.getItem('sessionId');
    const playerName = localStorage.getItem('username');
    const showLobbyId = document.getElementById('session-id-display');
    showLobbyId.textContent = `Game ID: ${currentSessionId}`;

    // üî• –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Å—Ç–∞—Ä—ã–π socket.id (–ø–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ)
    const oldSocketId = localStorage.getItem("oldSocketId");
    if (oldSocketId) {
        console.log(`üîÑ –ü–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ, —Å—Ç–∞—Ä—ã–π ID: ${oldSocketId}, –Ω–æ–≤—ã–π ID: ${socket.id}`);
        socket.emit("reconnectPlayer", { sessionId: currentSessionId, playerName, oldSocketId });
    } else {
        console.log(`üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–≥—Ä–µ: ${currentSessionId}`);
        socket.emit("joinGame", { sessionId: currentSessionId, playerName });
    }
});

function copyToClipboard() {
    const currentSessionId = localStorage.getItem('sessionId');
    navigator.clipboard.writeText(currentSessionId).then(() => {
        console.log("–¢–µ–∫—Å—Ç —É—Å–ø–µ—à–Ω–æ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω!");
    }).catch(err => {
        console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–∏: ", err);
    });
}


function updatePlayerCount(count) {
    const counter = document.getElementById("playersCount");
    counter.textContent = count + " / " + maxPlayerCount;

    // –î–æ–±–∞–≤–ª—è–µ–º –∞–Ω–∏–º–∞—Ü–∏—é
    const counterWrapper = document.querySelector(".players__count");
    counterWrapper.classList.add("updated");

    // –£–±–∏—Ä–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –ø–æ—Å–ª–µ 500 –º—Å
    setTimeout(() => {
        counterWrapper.classList.remove("updated");
    }, 500);
}


// // –°–ª—É—à–∞—Ç–µ–ª—å: –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∏–≥—Ä–æ–∫–æ–≤
// socket.on("updatePlayers", (players) => { NEWNEW
//     console.log("üì• –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∏–≥—Ä–æ–∫–æ–≤:", players);
//     currentPlayers = players;
//     renderPlayers(players);
//
//     // –£–¥–∞–ª—è–µ–º `oldSocketId`, –µ—Å–ª–∏ –∏–≥—Ä–æ–∫ —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–∏–ª—Å—è
//     // if (players.some(p => p.id === socket.id)) {
//     //     localStorage.removeItem("oldSocketId");
//     // }
//     localStorage.removeItem("oldSocketId");
//     updatePlayerCount(players.length); // –°—á–µ—Ç—á–∏–∫ –∏–≥—Ä–æ–∫–æ–≤ –≤ –ª–æ–±–±–∏
// });

socket.on("updateLobbyName", (lobbyName) => {
    console.log(`üì¢ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è –ª–æ–±–±–∏: ${lobbyName}`);
    localStorage.setItem("lobbyName", lobbyName); // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –ª–æ–∫–∞–ª—å–Ω–æ–º —Ö—Ä–∞–Ω–∏–ª–∏—â–µ
    document.getElementById("lobbyName").textContent = `${lobbyName}`;
});

socket.on("updatePlayers", (players) => {
    console.log("üì• –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∏–≥—Ä–æ–∫–æ–≤:", players);
    currentPlayers = players;

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∫—Ç–æ —Å–µ–π—á–∞—Å –∞–¥–º–∏–Ω
    isAdmin = adminId === socket.id;
    localStorage.setItem("isAdmin", isAdmin);

    // –†–µ—Ä–µ–Ω–¥–µ—Ä –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
    renderPlayers(players);

    // –£–¥–∞–ª—è–µ–º `oldSocketId`, –µ—Å–ª–∏ —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–∏–ª–∏—Å—å
    localStorage.removeItem("oldSocketId");
    updatePlayerCount(players.length);
});



// // –°–ª—É—à–∞—Ç–µ–ª—å: –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ NEWNEW
// socket.on("updateAdmin", (newAdminId) => {
//     console.log(`üëë –ù–æ–≤—ã–π –∞–¥–º–∏–Ω: ${newAdminId}`);
//     adminId = newAdminId;
//     isAdmin = adminId === socket.id; // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
//     renderPlayers(currentPlayers);
// });
socket.on("updateAdmin", (newAdminId) => {
    console.log(`üëë –ù–æ–≤—ã–π –∞–¥–º–∏–Ω: ${newAdminId}`);
    adminId = newAdminId;
    isAdmin = adminId === socket.id; // –ü–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞–µ–º isAdmin

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ localStorage
    localStorage.setItem("isAdmin", isAdmin);

    // –ü–µ—Ä–µ—Ä–∏—Å–æ–≤—ã–≤–∞–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
    renderPlayers(currentPlayers);
});


// –°–ª—É—à–∞—Ç–µ–ª—å: –∏—Å–∫–ª—é—á–µ–Ω–∏–µ –∏–≥—Ä–æ–∫–∞
socket.on("kicked", () => {
    console.warn("‚ùå –í–∞—Å –∏—Å–∫–ª—é—á–∏–ª–∏ –∏–∑ –ª–æ–±–±–∏.");
    alert("–í—ã –±—ã–ª–∏ –∏—Å–∫–ª—é—á–µ–Ω—ã –∏–∑ –ª–æ–±–±–∏.");
    localStorage.removeItem("sessionId");
    window.location.href = "index.html";
});

// –§—É–Ω–∫—Ü–∏—è —Ä–µ–Ω–¥–µ—Ä–∞ —Å–ø–∏—Å–∫–∞ –∏–≥—Ä–æ–∫–æ–≤ NEWNEW
// function renderPlayers(players) {
//     console.log("üîÑ –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ –∏–≥—Ä–æ–∫–æ–≤:", players);
//     playersContainer.innerHTML = "";
//
//     players.forEach((player) => {
//         const playerCard = document.createElement("div");
//         playerCard.classList.add("card");
//         playerCard.innerHTML = `
//             <h2>${player.name}</h2>
//             <p>ID: ${player.id || "N/A"}</p>
//             ${player.isAdmin ? "<a>Admin</a>" : ""}
//             ${
//             isAdmin && player.id !== socket.id
//                 ? `<button class="button__lobby-kick" data-id="${player.id}">Kick</button>
//                        <button class="button__lobby-admin" data-id="${player.id}">Admin</button>`
//                 : ""
//         }
//         `;
//         playersContainer.appendChild(playerCard);
//         console.log("‚úÖ –ò–≥—Ä–æ–∫–∏ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å!");
//     });
//
//     // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–Ω–æ–ø–æ–∫ (–¥–æ—Å—Ç—É–ø–Ω—ã —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω—É)
//     if (isAdmin) {
//         document.querySelectorAll(".button__lobby-kick").forEach((button) => {
//             button.addEventListener("click", () => {
//                 const playerId = button.getAttribute("data-id");
//                 socket.emit("kickPlayer", playerId);
//             });
//         });
//
//         document.querySelectorAll(".button__lobby-admin").forEach((button) => {
//             button.addEventListener("click", () => {
//                 const playerId = button.getAttribute("data-id");
//                 socket.emit("transferAdmin", playerId);
//             });
//         });
//     }
// }
function renderPlayers(players) {
    console.log("üîÑ –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ –∏–≥—Ä–æ–∫–æ–≤:", players);
    playersContainer.innerHTML = "";

    players.forEach((player) => {
        const playerCard = document.createElement("div");
        playerCard.classList.add("card");
        playerCard.innerHTML = `
            <h2>${player.name}</h2>
            <p>ID: ${player.id || "N/A"}</p>
            ${player.isAdmin ? "<a>Admin</a>" : ""}
            ${isAdmin && player.id !== socket.id ?
            `<button class="button__lobby-kick" data-id="${player.id}">Kick</button>
                 <button class="button__lobby-admin" data-id="${player.id}">Admin</button>`
            : ""}
        `;
        playersContainer.appendChild(playerCard);
    });

    // –û–±–Ω–æ–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–Ω–æ–ø–æ–∫
    if (isAdmin) {
        document.querySelectorAll(".button__lobby-kick").forEach((button) => {
            button.addEventListener("click", () => {
                const playerId = button.getAttribute("data-id");
                socket.emit("kickPlayer", playerId);
            });
        });

        document.querySelectorAll(".button__lobby-admin").forEach((button) => {
            button.addEventListener("click", () => {
                const playerId = button.getAttribute("data-id");
                socket.emit("transferAdmin", playerId);
            });
        });
    }
}
